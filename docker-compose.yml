version: '3.7'

services:

# Frontend service fpr Elixir.io
  # frontend:
  #   container_name: elixir_frontend

# Backend service for Elixir.io
  backend:
    container_name: elixir_backend
    build: 
      context: ./backend
      target: development # build only development section of the docker image
    ports:
      - 9229:9229
      - 3000:3000
    command: npm run start:dev
    environment:
      JWT_CONSTANT_SECRET: ${JWT_CONSTANT_SECRET}
      S3_ADMINISTRATOR_ACCESS_KEY_ID: ${S3_ADMINISTRATOR_ACCESS_KEY_ID}
      S3_ADMINISTRATOR_SECRET_ACCESS_KEY: ${S3_ADMINISTRATOR_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
      NODE_ENV: development
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      ELASTIC_EMAIL_USERNAME: ${ELASTIC_EMAIL_USERNAME}
      ELASTIC_EMAIL_PASSWORD: ${ELASTIC_EMAIL_PASSWORD}
      ELASTIC_EMAIL_SERVER_HOST: ${ELASTIC_EMAIL_SERVER_HOST}
      ELASTIC_EMAIL_PORT: ${ELASTIC_EMAIL_PORT}
      ELASTIC_EMAIL_FROM_EMAIL: ${ELASTIC_EMAIL_FROM_EMAIL}
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
      AUTH0_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}
      REDIS_SERVER_URL: ${REDIS_SERVER_URL}
      FLUTTERWAVE_SECRET_KEY: ${FLUTTERWAVE_SECRET_KEY}
      FLUTTERWAVE_PUBLIC_KEY: ${FLUTTERWAVE_PUBLIC_KEY}
      VONAGE_API_KEY: ${VONAGE_API_KEY}
      VONAGE_API_SECRET: ${VONAGE_API_SECRET}
      DAILY_API_KEY: ${DAILY_API_KEY}


      
    volumes:
      - .:/usr/src/app/ # mounting the directory inside the container
      - /usr/src/app/backend/node_modules # mounting node_modules inside the backend container
    env_file:
      - .env
    depends_on:
      - mongo

# MongoDB service for Elixir.io
  mongo:
    container_name: elixir_mongodb
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGOROOTUSERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGOROOTPASSWD}
    
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo-js:ro
      - ./mongo-volume:/data/db
    ports: 
      # - '27017-27019:27017-27019'
      - '27017:27017'


  mongo-backup:
    container_name: elixir_mongodb_backup
    image: mongo
    restart: always

    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGOROOTUSERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGOROOTPASSWD}

    volumes:
      - ./mongo-backup-volume:/data/db
    ports: 
      - '27021:27017'


  redis:
    container_name: elixir_redis
    image: redis:7.0.11-alpine
    restart: always
    ports:
      - '6379:6379'